FROM ubuntu:latest

# Evita prompts durante a instalação de pacotes
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV VENV_PATH=/opt/venv

# Instala dependências do sistema
# Separado do COPY para aproveitar cache entre builds
RUN apt update && apt install -y \
    software-properties-common \
    build-essential \
    libsqlite3-dev \
    zlib1g-dev \
    tesseract-ocr \
    wget \
    gdal-bin \
    libgdal-dev \
    python3 \
    python3-venv \
    python3-dev \
    python3-pip \
    libegl1 \
    git \
    curl \
    squid \
    libgl1-mesa-dev \
    p7zip-full && \
    rm -rf /var/lib/apt/lists/*

# Variáveis de ambiente GDAL
ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
ENV C_INCLUDE_PATH=/usr/include/gdal

# Cria e ativa o venv
RUN python3 -m venv $VENV_PATH
ENV PATH="$VENV_PATH/bin:$PATH"

# Copia apenas o requirements.txt primeiro, para aproveitar cache
COPY src/etl/requirements.txt /app/requirements.txt

# Instala GDAL na versão certa antes do restante dos pacotes
RUN export GDAL_VERSION=$(gdal-config --version | awk -F. '{print $1"."$2"."$3}') && \
    echo "Detected GDAL version: $GDAL_VERSION" && \
    pip install --no-cache-dir gdal==$GDAL_VERSION && \
    pip install --no-cache-dir -r /app/requirements.txt

# Copia o restante dos arquivos
COPY src/etl /app
WORKDIR /app

# Executa o script
CMD bash -c "service squid restart && $VENV_PATH/bin/python /app/etl_sicar.py"
